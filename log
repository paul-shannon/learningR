##passing functions onto functions
#making lists in R 
x<- list(3,"cat") 

#making a named list
x<- list(number=3,string="cat") 

# pulling off parts from a list needs x[[]] for the contents:
x[[number]]

#get names of the list: 
names(x)

#library(somePackage) - loads the package, making all of its functions available to use  

divideBy <- function(dividend, divisor) {
  if (divisor == 0)
    return(NA)
  dividend / divisor
}
test_divideBy <- function() {
  checkEquals(divideBy(4, 2), 2)
  checkTrue(is.na(divideBy(4, 0)))
  checkEqualsNumeric(divideBy(4, 1.2345), 3.24, tolerance=1.0e-4)
}

cbind(0, matrix(1, nrow = 0, ncol = 4)) #> Warning (making sense)
dim(cbind(0, matrix(1, nrow = 2, ncol = 0))) #-> 2 x 1

## deparse.level
dd <- 10
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 0) # middle 2 rownames
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 1) # 3 rownames (default)
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 2) # 4 rownames

## cheap row names:

x <- data.frame(alpha=letters[1:3], num=1:3 )
n <- 4
xc <- data.frame( rep( x, n ) )
xc

grep("[a-z]", letters)
lapply(c("cat", "dog", "goose"),nchar(rep("cat", 20)))
1:10
1:100
lapply(c((rep("cat", 20) "dog", "goose"),nchar ))
animals <- c("cat", "dog", "goose")
sizes <- lapply(animals, function(s) nchar(s))
names(sizes) <- animals
rep("cat", 5)
paste(rep("cat", 5), collapse="")         


#Instructions on how to use GitHub using RStudio:

#First, login to Github.
#To create a repository for R, click the green button “New” when you go into “your repositories” tab. 
#Make sure to make a repository name (one that may correlate with a project), 
#make sure it is public so it can she shared among colleagues and mentors, and add a “gitignore” and scroll down 
#(or search for) R so it can be cloned into RStudio.

#Terminal Commands (may be in order):

#cd - allows me to go back to home directory “user$”. To get into the “GitHub” directory, do “cd github” from the home directory.

#Mkdir “<name of wanted directory>”- allows you to create a directory from whatever directory you are in. Think of it as adding another folder to your binder. Do “cd ‘directory name’ once constructed.

#git clone “<repository link from GitHub>”- copies the repository into RStudio

#ls -l -lists whatever is in current directory

#pwd- print working directory (usually used to see where you are working at)

#Cat <file name>- to read a file

#Filename1 > filename2 - replacing filename2 with filename 1
#Filename1 >>filename2 - adding on filename1 to filename2

#To push a file on GitHub: 1. git add <filename> 2. git commit -m “<give name for file>” 3. git push

#cp ~/<Path/To/File\ .name.txt> - copy a file into the directory

#mv filename1.pdf filename2.pdf - move a file to another
